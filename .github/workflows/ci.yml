name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  VAULT_ADDR: http://127.0.0.1:8200

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: cargo test --verbose

      - name: Build
        run: cargo build --verbose

      - uses: actions/upload-artifact@v4
        with:
          name: vault-sync
          path: target/debug/vault-sync
          if-no-files-found: error

  build-bao:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openbao/openbao
          ref: namespaces

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build OpenBao
        run: |
          make bootstrap
          make dev

      - uses: actions/upload-artifact@v4
        with:
          name: bao
          path: bin/bao
          if-no-files-found: error

  test-vault:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: vault-sync

      - name: Fix permissions
        run: |
          chmod 0755 ./vault-sync

      - name: Install Vault
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gpg
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg >/dev/null
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update -y
          sudo apt-get install -y vault
          vault version

      - name: Run local test
        run: VAULT_SYNC_BINARY=./vault-sync ./scripts/test-sync.sh

  test-bao:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install OpenBao
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_RELEASE=$(gh release list --repo openbao/openbao --json name,isLatest --jq '.[] | select(.isLatest) | .name')
          gh release download --repo openbao/openbao $LATEST_RELEASE -p 'bao_*_Linux_x86_64.tar.gz'
          tar zxf bao_*.tar.gz bao
          ./bao version

      - uses: actions/download-artifact@v4
        with:
          name: vault-sync

      - name: Fix permissions
        run: |
          chmod 0755 vault-sync

      - name: Use bao instead of vault
        run: |
          ln -s bao vault
          echo $PWD >> $GITHUB_PATH

      - name: Run local test
        run: VAULT_SYNC_BINARY=./vault-sync ./scripts/test-sync.sh

  test-bao-namespaces:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-bao

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: vault-sync

      - uses: actions/download-artifact@v4
        with:
          name: bao

      - name: Fix permissions
        run: |
          chmod 0755 vault-sync bao

      - name: Use bao instead of vault
        run: |
          ln -s bao vault
          echo $PWD >> $GITHUB_PATH

      - name: Run local test
        run: VAULT_SYNC_BINARY=./vault-sync ./scripts/test-sync.sh --namespaces

  kubernetes:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run Helm tests
        run: |
          ./scripts/test-helm.sh
